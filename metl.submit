universe = container
#container_image = file:///staging/iaross/metl_global.sif
container_image = osdf:///ospool/ap40/data/ian.ross/metl_global.sif

# request_disk should be at least 10x the size of the input files
# processing propose typically uses about 3.5 GB of CPU memory and 8GB of GPU memory
# add cpus=xx disk=yy memory=zz on the submit command line to override these defaults
request_disk = $(disk:80GB)
request_memory = $(memory:128GB)
request_cpus = $(cpus:4)
request_gpus = $(gpus:99999)
#gpus_minimum_capability = 7.5
#gpus_minimum_memory = 8192

environment = "WANDB_API_KEY=0713980c153b1601f06370cb13f67b1182ff0221"

#+is_resumable = true

executable = /bin/bash
transfer_executable = false
arguments = pretrain.sh $(epoch) $(run_uuid) $(random_seed)

transfer_input_files = pretrain.sh, osdf:///ospool/ap40/data/ian.ross/processed-global.tar.gz
if defined continue_from_checkpoint 
transfer_input_files = $(transfer_input_files), output/training_logs/$(run_uuid)
endif
transfer_output_files = output
should_transfer_files = YES
when_to_transfer_output = ON_EXIT_OR_EVICT

output = $(CLUSTERID).out
stream_output = true
error = $(CLUSTERID).err
stream_error = true

log = metl_$(CLUSTERID).log


epoch=1
run_uuid=6f99db28
random_seed=137
batch_name=$(run_uuid)_$(request_gpus)g_$(request_cpus)c_$(request_memory)
queue
#queue epoch, run_uuid FROM params
